{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chloe\\\\OneDrive\\\\Bureau\\\\Projets\\\\AUTHENTICATION\\\\auth-project\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [token, setIsToken] = useState(null);\n  const userIsLoggedIn = !!token; // double '!!' converts the truthy or falsy value to a true or false boolean. If token is a string that's not empty it will return true, if it is empty it will return false\n\n  const loginHandler = token => {\n    setIsToken(token);\n  };\n\n  const logoutHandler = () => {\n    setIsToken(null);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContextProvider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"8HjG1uSrBAd61WS/7ejAsjZJbxk=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","setIsToken","userIsLoggedIn","loginHandler","logoutHandler","contextValue","children"],"sources":["C:/Users/chloe/OneDrive/Bureau/Projets/AUTHENTICATION/auth-project/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from \"react\"\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: (token) => {},\r\n    logout: () => {}\r\n})\r\n\r\nexport const AuthContextProvider = props => {\r\n    const [ token, setIsToken ] = useState(null);\r\n\r\n    const userIsLoggedIn = !!token; // double '!!' converts the truthy or falsy value to a true or false boolean. If token is a string that's not empty it will return true, if it is empty it will return false\r\n\r\n    const loginHandler = (token) => {\r\n        setIsToken(token)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        setIsToken(null)\r\n    }\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    }\r\n\r\n    return <AuthContextProvider value={contextValue}>{props.children}</AuthContextProvider>\r\n}\r\n\r\nexport default AuthContext;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EACpCC,KAAK,EAAE,EAD6B;EAEpCC,UAAU,EAAE,KAFwB;EAGpCC,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHgB;EAIpCG,MAAM,EAAE,MAAM,CAAE;AAJoB,CAApB,CAApB;AAOA,OAAO,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;EAAA;;EACxC,MAAM,CAAEL,KAAF,EAASM,UAAT,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;EAEA,MAAMU,cAAc,GAAG,CAAC,CAACP,KAAzB,CAHwC,CAGR;;EAEhC,MAAMQ,YAAY,GAAIR,KAAD,IAAW;IAC5BM,UAAU,CAACN,KAAD,CAAV;EACH,CAFD;;EAIA,MAAMS,aAAa,GAAG,MAAM;IACxBH,UAAU,CAAC,IAAD,CAAV;EACH,CAFD;;EAIA,MAAMI,YAAY,GAAG;IACjBV,KAAK,EAAEA,KADU;IAEjBC,UAAU,EAAEM,cAFK;IAGjBL,KAAK,EAAEM,YAHU;IAIjBL,MAAM,EAAEM;EAJS,CAArB;EAOA,oBAAO,QAAC,mBAAD;IAAqB,KAAK,EAAEC,YAA5B;IAAA,UAA2CL,KAAK,CAACM;EAAjD;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CArBM;;GAAMP,mB;;KAAAA,mB;AAuBb,eAAeN,WAAf"},"metadata":{},"sourceType":"module"}